How to Use 2-matrix_divided.py
=============================

This module defines a matrix division function ``matrix_divided(matrix, div)``.

Usage
=====

``matrix_divided(...)``` returns a new matrix with elements divided by a divisor.

::

    >>> matrix_divided([[1, 2, 3], [4, 5, 6]], 3)
    [[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

::

    >>> matrix_divided([[1, 2]], 2)
    [[0.5, 1.0]]

The divisor can be a float.

::

    >>> matrix_divided([[1, 2], [3, 4]], 2.5)
    [[0.4, 0.8], [1.2, 1.6]]

Note that the result is rounded to 2 decimal places.

::

    >>> matrix_divided([[1, 2], [3, 4]], 3)
    [[0.33, 0.67], [1.0, 1.33]]

Non-Numbers
===========

The matrix and divisor must follow specific criteria to avoid errors.

If matrix is not a list of lists or if div is not a number, a TypeError is raised:

::

    >>> matrix_divided([1, 2, 3], 2)
    Traceback (most recent call last):
    TypeError: matrix must be a list of lists

::

    >>> matrix_divided([[1, 2], [3, 4]], 'abc')
    Traceback (most recent call last):
    TypeError: div must be a number

An empty matrix or a divisor of 0 will raise a ValueError.

::

    >>> matrix_divided([], 2)
    Traceback (most recent call last):
    ValueError: matrix can't be empty

::

    >>> matrix_divided([[1, 2], [3, 4]], 0)
    Traceback (most recent call last):
    ValueError: division by zero

Invalid Matrix Structure
========================

The function requires that all rows in the matrix have the same size. If not, a TypeError is raised:

::

    >>> matrix_divided([[1, 2], [3, 4, 5]], 2)
    Traceback (most recent call last):
    TypeError: each row of matrix must have the same size

