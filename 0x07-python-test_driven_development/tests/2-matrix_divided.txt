# Test cases for matrix_divided function

>>> from 2-matrix_divided import matrix_divided

# Test case 1
>>> matrix = [[1, 2, 3], [4, 5, 6]]
>>> matrix_divided(matrix, 3)
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]
>>> matrix  # original matrix should remain unchanged
[[1, 2, 3], [4, 5, 6]]

# Test case 2 - Check rounding to 2 decimal places
>>> matrix = [[5, 8, 9], [2, 6, 7]]
>>> matrix_divided(matrix, 2)
[[2.5, 4.0, 4.5], [1.0, 3.0, 3.5]]

# Test case 3 - Check division by 1
>>> matrix = [[10, 20], [30, 40]]
>>> matrix_divided(matrix, 1)
[[10.0, 20.0], [30.0, 40.0]]

# Test case 4 - Check division by a decimal number
>>> matrix = [[2, 4, 6], [8, 10, 12]]
>>> matrix_divided(matrix, 0.5)
[[4.0, 8.0, 12.0], [16.0, 20.0, 24.0]]

# Test case 5 - Check division by zero
>>> matrix = [[1, 2], [3, 4]]
>>> matrix_divided(matrix, 0)
Traceback (most recent call last):
    ...
ZeroDivisionError: division by zero

# Test case 6 - Check non-numeric elements in the matrix
>>> matrix = [[3, "9"], [15, 3]]
>>> matrix_divided(matrix, 3)
Traceback (most recent call last):
    ...
TypeError: matrix must be a matrix (list of lists) of integers/floats

# Test case 7 - Check rows with different sizes
>>> matrix = [[1, 2, 3], [4, 5]]
>>> matrix_divided(matrix, 2)
Traceback (most recent call last):
    ...
TypeError: Each row of the matrix must have the same size

# Test case 8 - Check div is not a number
>>> matrix = [[1, 2], [3, 4]]
>>> matrix_divided(matrix, 'abc')
Traceback (most recent call last):
    ...
TypeError: div must be a number
